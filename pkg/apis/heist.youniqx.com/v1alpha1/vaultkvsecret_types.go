/*
Copyright 2021.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// EDIT THIS FILE!  THIS IS SCAFFOLDING FOR YOU TO OWN!
// NOTE: json tags are required.  Any new fields you add must have json tags for the fields to be serialized.

// EncryptedValue represents a value that has been encrypted by Heists managed Transit Engine.
// +optional
// +kubebuilder:validation:Optional
// +kubebuilder:validation:Pattern:=`^vault:([a-z0-9]+):(.+)$`
type EncryptedValue string

// VaultKVSecretField defines the desired state of a field in a VaultKVSecret.
type VaultKVSecretField struct {
	// CipherText represents a value which has been encrypted by Heists managed
	// Transit Engine.
	// +optional
	// +kubebuilder:validation:Optional
	CipherText EncryptedValue `json:"ciphertext,omitempty"`

	// AutoGenerated configures that the secret should have an autogenerated value.
	// Must be set to false when using a custom stringValue or custom cipherText.
	// Defaults to true.
	// +optional
	// +kubebuilder:validation:Optional
	AutoGenerated bool `json:"autoGenerated,omitempty"`

	// AutoGeneratedLength can be used in combination with AutoGenerated.
	// It optionally configures the length of the autogenerated secret, the default
	// is 64 character.
	// +optional
	// +kubebuilder:validation:Optional
	AutoGeneratedLength int `json:"autoGeneratedLength,omitempty"`
}

// VaultKVSecretSpec defines the desired secret's fields and the secret's config.
type VaultKVSecretSpec struct {
	// INSERT ADDITIONAL SPEC FIELDS - desired state of cluster
	// Important: Run "make" to regenerate code after modifying this file

	// Engine configures the secret storage engine in which the secret should
	// be stored.
	// +required
	// +kubebuilder:validation:Required
	Engine string `json:"engine"`

	// Path configures the relative path of the Secret inside its secret engine.
	// +optional
	// +kubebuilder:validation:Optional
	Path string `json:"path,omitempty"`

	// Fields is a map of fields stored in the Secret.
	// +optional
	// +kubebuilder:validation:Optional
	Fields map[string]*VaultKVSecretField `json:"fields,omitempty"`

	// DeleteProtection configures that the secret should not be able to be deleted.
	// Defaults to false.
	// +optional
	// +kubebuilder:validation:Optional
	DeleteProtection bool `json:"deleteProtection,omitempty"`
}

// VaultKVSecretStatus defines the observed state of VaultKVSecret.
type VaultKVSecretStatus struct {
	Conditions []metav1.Condition `json:"conditions,omitempty"`

	// ReadOnlyPolicyName is the name of the read-only policy created for this
	// secret.
	// +optional
	ReadOnlyPolicyName string `json:"policyName,omitempty"`

	// Engine is the name of the engine used to store this secret.
	// +optional
	Engine string `json:"engine,omitempty"`

	// Path is the relative path this secret inside its engine.
	// +optional
	Path string `json:"path,omitempty"`

	// Fields is a map of field names to cipher text for all fields currently.
	// stored in Vault
	// +optional
	Fields map[string]string `json:"fields,omitempty"`
}

// +kubebuilder:resource:shortName=kvs,categories=heist;youniqx
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="Provisioned",type="string",JSONPath=".status.conditions[?(@.type=='Provisioned')].status",description="The status of this VaultKVSecret"
// +kubebuilder:printcolumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp",description="Creation Timestamp of the Secret"
// +genclient

// VaultKVSecret is the Schema for the vaultkvsecrets API.
type VaultKVSecret struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`

	Spec   VaultKVSecretSpec   `json:"spec,omitempty"`
	Status VaultKVSecretStatus `json:"status,omitempty"`
}

// VaultKVSecretList contains a list of VaultKVSecret.
// +kubebuilder:object:root=true
type VaultKVSecretList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VaultKVSecret `json:"items"`
}

func init() {
	SchemeBuilder.Register(&VaultKVSecret{}, &VaultKVSecretList{})
}
