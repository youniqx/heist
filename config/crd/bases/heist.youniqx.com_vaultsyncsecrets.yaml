---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: vaultsyncsecrets.heist.youniqx.com
spec:
  group: heist.youniqx.com
  names:
    categories:
    - heist
    - youniqx
    kind: VaultSyncSecret
    listKind: VaultSyncSecretList
    plural: vaultsyncsecrets
    shortNames:
    - vss
    singular: vaultsyncsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of this VaultSyncSecret
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Provisioned
      type: string
    - description: Creation Timestamp of the VaultSyncSecret
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultSyncSecret is the Schema for the vaultsyncsecrets API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            properties:
              certificateTemplates:
                description: CertificateTemplates configures settings for certificates
                  which may be issued.
                items:
                  properties:
                    alias:
                      description: Alias is the name of this certificate template.
                      type: string
                    certificateRole:
                      description: CertificateRole is the name of the VaultCertificateRole
                        to be used for issuing this certificate.
                      type: string
                    commonName:
                      description: CommonName is the CN (common name) of the issued
                        certificate.
                      type: string
                    dnsSans:
                      description: DNSSans is a list of DNS subject alternative names
                        requested for this certificate.
                      items:
                        type: string
                      type: array
                    excludeCNFromSans:
                      description: ExcludeCNFromSans toggles if the common name should
                        be excluded from the subject alternative names of the certificate.
                      type: boolean
                    ipSans:
                      description: IPSans is a list of IP subject alternative names
                        requested for this certificate.
                      items:
                        type: string
                      type: array
                    otherSans:
                      description: 'OtherSans is a list of custom OID/UTF-8 subject
                        alternative names requested for this certificate. Expected
                        Format: `<oid>;<type>:<value>`'
                      items:
                        type: string
                      type: array
                    ttl:
                      description: TTL is the Time-To-Live requested for this certificate.
                      type: string
                    uriSans:
                      description: AlternativeNames is a list of URI subject alternative
                        names requested for this certificate.
                      items:
                        type: string
                      type: array
                  required:
                  - certificateRole
                  type: object
                type: array
              data:
                additionalProperties:
                  properties:
                    certificate:
                      description: Certificate configures a VaultCertificateRole from
                        which a field should be synced.
                      properties:
                        field:
                          description: Field is the field of the certificate which
                            should be synced.
                          enum:
                          - certificate
                          - private_key
                          - cert_chain
                          - full_cert_chain
                          type: string
                        name:
                          description: Name is the name of the certificate template
                            used to issue the certificate which should be synced.
                          minLength: 1
                          type: string
                      type: object
                    certificateAuthority:
                      description: CertificateAuthority configures a VaultCertificateAuthority
                        from which a field should be synced.
                      properties:
                        field:
                          description: Field is the field of the certificate authority
                            which should be synced.
                          enum:
                          - certificate
                          - private_key
                          - cert_chain
                          - full_cert_chain
                          type: string
                        name:
                          description: Name is the name of the VaultCertificateAuthority
                            which should be synced.
                          minLength: 1
                          type: string
                      type: object
                    cipherText:
                      description: CipherText represents a value which has been encrypted
                        by Heists managed Transit Engine.
                      pattern: ^vault:([a-z0-9]+):(.+)$
                      type: string
                    kvSecret:
                      description: KVSecret configures a VaultKVSecret from which
                        a field should be synced
                      properties:
                        field:
                          description: Field specifies a single field of the VaultKVSecret
                            which should be synced.
                          minLength: 1
                          type: string
                        name:
                          description: Name is the name of the VaultKVSecret which
                            should be synced.
                          minLength: 1
                          type: string
                      type: object
                  type: object
                description: Data is a map of values which should be synced to the
                  Target Kubernetes Secret.
                type: object
              target:
                description: Target configures the secret you want to sync values
                  to.
                properties:
                  name:
                    description: Name is the name of the secret resource you want
                      to create.
                    maxLength: 253
                    type: string
                  namespace:
                    description: Namespace is the namespace the secret should be created
                      in.
                    maxLength: 63
                    type: string
                  type:
                    description: Type is the type of secret which should be created.
                    enum:
                    - Opaque
                    - kubernetes.io/dockercfg
                    - kubernetes.io/dockerconfigjson
                    - kubernetes.io/basic-auth
                    - kubernetes.io/ssh-auth
                    - kubernetes.io/tls
                    type: string
                type: object
            type: object
          status:
            description: VaultSyncSecretStatus defines the observed state of VaultSyncSecret.
            properties:
              appliedSpec:
                properties:
                  certificateTemplates:
                    description: CertificateTemplates configures settings for certificates
                      which may be issued.
                    items:
                      properties:
                        alias:
                          description: Alias is the name of this certificate template.
                          type: string
                        certificateRole:
                          description: CertificateRole is the name of the VaultCertificateRole
                            to be used for issuing this certificate.
                          type: string
                        commonName:
                          description: CommonName is the CN (common name) of the issued
                            certificate.
                          type: string
                        dnsSans:
                          description: DNSSans is a list of DNS subject alternative
                            names requested for this certificate.
                          items:
                            type: string
                          type: array
                        excludeCNFromSans:
                          description: ExcludeCNFromSans toggles if the common name
                            should be excluded from the subject alternative names
                            of the certificate.
                          type: boolean
                        ipSans:
                          description: IPSans is a list of IP subject alternative
                            names requested for this certificate.
                          items:
                            type: string
                          type: array
                        otherSans:
                          description: 'OtherSans is a list of custom OID/UTF-8 subject
                            alternative names requested for this certificate. Expected
                            Format: `<oid>;<type>:<value>`'
                          items:
                            type: string
                          type: array
                        ttl:
                          description: TTL is the Time-To-Live requested for this
                            certificate.
                          type: string
                        uriSans:
                          description: AlternativeNames is a list of URI subject alternative
                            names requested for this certificate.
                          items:
                            type: string
                          type: array
                      required:
                      - certificateRole
                      type: object
                    type: array
                  data:
                    additionalProperties:
                      properties:
                        certificate:
                          description: Certificate configures a VaultCertificateRole
                            from which a field should be synced.
                          properties:
                            field:
                              description: Field is the field of the certificate which
                                should be synced.
                              enum:
                              - certificate
                              - private_key
                              - cert_chain
                              - full_cert_chain
                              type: string
                            name:
                              description: Name is the name of the certificate template
                                used to issue the certificate which should be synced.
                              minLength: 1
                              type: string
                          type: object
                        certificateAuthority:
                          description: CertificateAuthority configures a VaultCertificateAuthority
                            from which a field should be synced.
                          properties:
                            field:
                              description: Field is the field of the certificate authority
                                which should be synced.
                              enum:
                              - certificate
                              - private_key
                              - cert_chain
                              - full_cert_chain
                              type: string
                            name:
                              description: Name is the name of the VaultCertificateAuthority
                                which should be synced.
                              minLength: 1
                              type: string
                          type: object
                        cipherText:
                          description: CipherText represents a value which has been
                            encrypted by Heists managed Transit Engine.
                          pattern: ^vault:([a-z0-9]+):(.+)$
                          type: string
                        kvSecret:
                          description: KVSecret configures a VaultKVSecret from which
                            a field should be synced
                          properties:
                            field:
                              description: Field specifies a single field of the VaultKVSecret
                                which should be synced.
                              minLength: 1
                              type: string
                            name:
                              description: Name is the name of the VaultKVSecret which
                                should be synced.
                              minLength: 1
                              type: string
                          type: object
                      type: object
                    description: Data is a map of values which should be synced to
                      the Target Kubernetes Secret.
                    type: object
                  target:
                    description: Target configures the secret you want to sync values
                      to.
                    properties:
                      name:
                        description: Name is the name of the secret resource you want
                          to create.
                        maxLength: 253
                        type: string
                      namespace:
                        description: Namespace is the namespace the secret should
                          be created in.
                        maxLength: 63
                        type: string
                      type:
                        description: Type is the type of secret which should be created.
                        enum:
                        - Opaque
                        - kubernetes.io/dockercfg
                        - kubernetes.io/dockerconfigjson
                        - kubernetes.io/basic-auth
                        - kubernetes.io/ssh-auth
                        - kubernetes.io/tls
                        type: string
                    type: object
                type: object
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
