---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: vaulttransitkeys.heist.youniqx.com
spec:
  group: heist.youniqx.com
  names:
    categories:
    - heist
    - youniqx
    kind: VaultTransitKey
    listKind: VaultTransitKeyList
    plural: vaulttransitkeys
    shortNames:
    - vtk
    singular: vaulttransitkey
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of this VaultTransitKey
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Synced
      type: string
    - description: Creation Timestamp of the VaultTransitKey
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultTransitKey is the Schema for the vaulttransitengines API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultTransitKeySpec defines the desired state of VaultTransitKey.
            properties:
              allowPlaintextBackup:
                description: AllowPlaintextBackup enables taking backups of named
                  key in the plaintext format. Once set, this cannot be disabled.
                type: boolean
              deleteProtection:
                description: DeleteProtection configures that the secret should not
                  be able to be deleted. Defaults to false.
                type: boolean
              engine:
                description: Engine configures the used transit engine.
                type: string
              exportable:
                description: Exportable enables keys to be exportable. This allows
                  for all the valid keys in the key ring to be exported. Once set,
                  this cannot be disabled.
                type: boolean
              minimumDecryptionVersion:
                description: MinimumDecryptionVersion specifies the minimum version
                  of the key that can be used to decrypt the ciphertext. Adjusting
                  this as part of a key rotation policy can prevent old copies of
                  ciphertext from being decrypted, should they fall into the wrong
                  hands. For signatures, this value controls the minimum version of
                  signature that can be verified against. For HMACs, this controls
                  the minimum version of a key allowed to be used as the key for verification.
                type: integer
              minimumEncryptionVersion:
                description: MinimumEncryptionVersion Specifies the minimum version
                  of the key that can be used to encrypt plaintext, sign payloads,
                  or generate HMACs. Must be 0 (which will use the latest version)
                  or a value greater or equal to min_decryption_version.
                type: integer
              type:
                description: 'Type configures the transit key type. Must be a vault
                  supported key type. Additional information: https://www.vaultproject.io/api/secret/transit#type.'
                enum:
                - aes128-gcm96
                - aes256-gcm96
                - chacha20-poly1305
                - ed25519
                - ecdsa-p256
                - ecdsa-p384
                - ecdsa-p521
                - rsa-2048
                - rsa-3072
                - rsa-4096
                type: string
            required:
            - engine
            - type
            type: object
          status:
            description: VaultTransitKeyStatus defines the observed state of VaultTransitKey.
            properties:
              appliedSpec:
                description: AppliedSpec contains more information about the current
                  state of the VaultTransitKey object.
                properties:
                  allowPlaintextBackup:
                    description: AllowPlaintextBackup enables taking backups of named
                      key in the plaintext format. Once set, this cannot be disabled.
                    type: boolean
                  deleteProtection:
                    description: DeleteProtection configures that the secret should
                      not be able to be deleted. Defaults to false.
                    type: boolean
                  engine:
                    description: Engine configures the used transit engine.
                    type: string
                  exportable:
                    description: Exportable enables keys to be exportable. This allows
                      for all the valid keys in the key ring to be exported. Once
                      set, this cannot be disabled.
                    type: boolean
                  minimumDecryptionVersion:
                    description: MinimumDecryptionVersion specifies the minimum version
                      of the key that can be used to decrypt the ciphertext. Adjusting
                      this as part of a key rotation policy can prevent old copies
                      of ciphertext from being decrypted, should they fall into the
                      wrong hands. For signatures, this value controls the minimum
                      version of signature that can be verified against. For HMACs,
                      this controls the minimum version of a key allowed to be used
                      as the key for verification.
                    type: integer
                  minimumEncryptionVersion:
                    description: MinimumEncryptionVersion Specifies the minimum version
                      of the key that can be used to encrypt plaintext, sign payloads,
                      or generate HMACs. Must be 0 (which will use the latest version)
                      or a value greater or equal to min_decryption_version.
                    type: integer
                  type:
                    description: 'Type configures the transit key type. Must be a
                      vault supported key type. Additional information: https://www.vaultproject.io/api/secret/transit#type.'
                    enum:
                    - aes128-gcm96
                    - aes256-gcm96
                    - chacha20-poly1305
                    - ed25519
                    - ecdsa-p256
                    - ecdsa-p384
                    - ecdsa-p521
                    - rsa-2048
                    - rsa-3072
                    - rsa-4096
                    type: string
                required:
                - engine
                - type
                type: object
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
