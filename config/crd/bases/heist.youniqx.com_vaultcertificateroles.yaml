---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: vaultcertificateroles.heist.youniqx.com
spec:
  group: heist.youniqx.com
  names:
    categories:
    - heist
    - youniqx
    kind: VaultCertificateRole
    listKind: VaultCertificateRoleList
    plural: vaultcertificateroles
    shortNames:
    - vc
    singular: vaultcertificaterole
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of this CertificateRole
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Provisioned
      type: string
    - description: Creation Timestamp of the certificate
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultCertificateRole is the Schema for the VaultCertificateRole
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultCertificateRoleSpec defines the desired state of VaultCertificateRole.
            properties:
              issuer:
                description: Issuer specifies the certificate authority used to issue
                  the certificate.
                type: string
              settings:
                description: Settings configures the settings of the certificate.
                properties:
                  allowAnyName:
                    description: 'AllowAnyName configures if certificates can be issued
                      for any common name. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_any_name.'
                    type: boolean
                  allowBareDomains:
                    description: 'AllowBareDomains configures if certificates can
                      be issued for bare domains. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_bare_domains.'
                    type: boolean
                  allowGlobDomains:
                    description: 'AllowGlobDomains configures if certificates can
                      be issued for wildcard domains. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_glob_domains.'
                    type: boolean
                  allowIPSans:
                    description: 'AllowIPSans configures if certificates with IP subject
                      alternative names can be issued. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_ip_sans.'
                    type: boolean
                  allowLocalhost:
                    description: 'AllowLocalhost configures if the certificate is
                      valid for localhost. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_localhost.'
                    type: boolean
                  allowSubdomains:
                    description: 'AllowSubdomains configures if certificates can be
                      issued for subdomains. Additional information: https://www.vaultproject.io/api-docs/secret/pki#allow_subdomains.'
                    type: boolean
                  allowedDomains:
                    description: 'AllowedDomains configures a list of domains for
                      which this certificate can be issued. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#allowed_domains.'
                    items:
                      type: string
                    type: array
                  allowedDomainsTemplate:
                    description: 'AllowedDomainsTemplate configures if the list of
                      allowed domains can make used of templates. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#allowed_domains_template.'
                    type: boolean
                  allowedOtherSans:
                    description: 'AllowedOtherSans configures an allow list of other
                      subject alternative names for which certificates can be issued.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#allowed_other_sans.'
                    items:
                      type: string
                    type: array
                  allowedURISans:
                    description: 'AllowedURISans configures an allow list of URI subject
                      alternative names for which certificates can be issued. Additional
                      information: https://www.vaultproject.io/api-docs/secret/pki#allowed_uri_sans.'
                    items:
                      type: string
                    type: array
                  basicConstraintsValidForNonCA:
                    description: 'BasicConstraintsValidForNonCA configures if basic
                      constraints should be valid when issuing non-ca certificates.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#basic_constraints_valid_for_non_ca.'
                    type: boolean
                  clientFlag:
                    description: 'ClientFlag configures if issued certificates should
                      have the client flag set. Additional information: https://www.vaultproject.io/api-docs/secret/pki#client_flag.'
                    type: boolean
                  codeSigningFlag:
                    description: 'CodeSigningFlag configures if issued certificates
                      should have the code signing flag set. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#code_signing_flag.'
                    type: boolean
                  emailProtectionFlag:
                    description: 'EmailProtectionFlag configures if issued certificates
                      should have the email protection flag set. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#email_protection_flag.'
                    type: boolean
                  enforceHostNames:
                    description: 'EnforceHostNames configures if host names should
                      be enforced. Additional information: https://www.vaultproject.io/api-docs/secret/pki#enforce_hostnames.'
                    type: boolean
                  extKeyUsage:
                    description: 'ExtendedKeyUsage configures a list of extended key
                      usages issued certificate should allow. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#ext_key_usage-1.'
                    items:
                      type: string
                    type: array
                  extKeyUsageOIDS:
                    description: 'ExtendedKeyUsageOIDS configures a list of key usage
                      OIDs issued certificate should allow. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#ext_key_usage_oids-1.'
                    items:
                      type: string
                    type: array
                  keyBits:
                    description: 'KeyBits sets the size of the key of the certificate
                      authority. Ignored in signing operations when KeyType is `any`.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#key_bits-3.'
                    enum:
                    - 224
                    - 256
                    - 384
                    - 521
                    - 2048
                    - 3072
                    - 4096
                    type: integer
                  keyType:
                    default: any
                    description: 'KeyType sets the key algorithm of the CA certificate.
                      Can be either rsa, ec or any if either type and any bit size
                      should be supported. ED25519 is not supported yet. Additional
                      information: https://www.vaultproject.io/api-docs/secret/pki#key_type-3.'
                    enum:
                    - rsa
                    - ec
                    - any
                    type: string
                  keyUsage:
                    description: 'KeyUsage configures a list of usages issued certificate
                      should allow. Additional information: https://www.vaultproject.io/api-docs/secret/pki#key_usage-1.'
                    items:
                      type: string
                    type: array
                  maxTTL:
                    description: 'MaxTTL configures the maximum validity of the certificate.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#max_ttl.'
                    type: string
                  notBeforeDuration:
                    description: 'NotBeforeDuration configures a delay which has to
                      elapse for any issued certificate to become valid. Additional
                      information: https://www.vaultproject.io/api-docs/secret/pki#not_before_duration-2.'
                    type: string
                  policyIdentifiers:
                    description: 'PolicyIdentifiers configures a list of policy OIDs
                      which should be set on issued certificates. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#policy_identifiers.'
                    items:
                      type: string
                    type: array
                  requireCN:
                    description: 'RequireCommonName configures if setting a common
                      name is required when issuing certificates. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#require_cn.'
                    type: boolean
                  serverFlag:
                    description: 'ServerFlag configures if issued certificates should
                      have the server flag set. Additional information: https://www.vaultproject.io/api-docs/secret/pki#server_flag.'
                    type: boolean
                  ttl:
                    description: 'TTL configures the validity of the certificate.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#ttl.'
                    type: string
                  useCSRCommonName:
                    description: 'UseCSRCommonName configures if the common name from
                      a CSR should be set in issued certificate. Additional information:
                      https://www.vaultproject.io/api-docs/secret/pki#use_csr_common_name.'
                    type: boolean
                  useCSRSans:
                    description: 'UseCSRSans configures if the subject alternative
                      names from a CSR should be included in issued certificates.
                      Additional information: https://www.vaultproject.io/api-docs/secret/pki#use_csr_sans.'
                    type: boolean
                type: object
              subject:
                description: Subject configures the subject fields of the Certificate.
                properties:
                  country:
                    description: Country sets the country field (C) in the certificate
                      subject.
                    items:
                      type: string
                    type: array
                  locality:
                    description: Locality sets the locality field (L) in the certificate
                      subject.
                    items:
                      type: string
                    type: array
                  organization:
                    description: Organization sets the organization (O) field in the
                      certificate subject.
                    items:
                      type: string
                    type: array
                  ou:
                    description: OrganizationalUnit sets the organizational unit (OU)
                      field in the certificate subject.
                    items:
                      type: string
                    type: array
                  postalCode:
                    description: PostalCode sets the postal code field in the certificate
                      subject.
                    items:
                      type: string
                    type: array
                  province:
                    description: Province sets the state or province field (ST) in
                      the certificate subject.
                    items:
                      type: string
                    type: array
                  streetAddress:
                    description: StreetAddress sets the street address field in the
                      certificate subject.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: VaultCertificateRoleStatus defines the observed state of
              VaultCertificateRole.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
