---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.0
  name: vaultkvsecrets.heist.youniqx.com
spec:
  group: heist.youniqx.com
  names:
    categories:
    - heist
    - youniqx
    kind: VaultKVSecret
    listKind: VaultKVSecretList
    plural: vaultkvsecrets
    shortNames:
    - kvs
    singular: vaultkvsecret
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of this VaultKVSecret
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Provisioned
      type: string
    - description: Creation Timestamp of the Secret
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultKVSecret is the Schema for the vaultkvsecrets API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultKVSecretSpec defines the desired secret's fields and
              the secret's config.
            properties:
              deleteProtection:
                description: DeleteProtection configures that the secret should not
                  be able to be deleted. Defaults to false.
                type: boolean
              engine:
                description: Engine configures the secret storage engine in which
                  the secret should be stored.
                type: string
              fields:
                additionalProperties:
                  description: VaultKVSecretField defines the desired state of a field
                    in a VaultKVSecret.
                  properties:
                    autoGenerated:
                      description: AutoGenerated configures that the secret should
                        have an autogenerated value. Must be set to false when using
                        a custom stringValue or custom cipherText. Defaults to true.
                      type: boolean
                    autoGeneratedLength:
                      description: AutoGeneratedLength can be used in combination
                        with AutoGenerated. It optionally configures the length of
                        the autogenerated secret, the default is 64 character.
                      type: integer
                    ciphertext:
                      description: CipherText represents a value which has been encrypted
                        by Heists managed Transit Engine.
                      pattern: ^vault:([a-z0-9]+):(.+)$
                      type: string
                  type: object
                description: Fields is a map of fields stored in the Secret.
                type: object
              path:
                description: Path configures the relative path of the Secret inside
                  its secret engine.
                type: string
            required:
            - engine
            type: object
          status:
            description: VaultKVSecretStatus defines the observed state of VaultKVSecret.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              engine:
                description: Engine is the name of the engine used to store this secret.
                type: string
              fields:
                additionalProperties:
                  type: string
                description: Fields is a map of field names to cipher text for all
                  fields currently. stored in Vault
                type: object
              path:
                description: Path is the relative path this secret inside its engine.
                type: string
              policyName:
                description: ReadOnlyPolicyName is the name of the read-only policy
                  created for this secret.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
