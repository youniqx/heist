---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: vaultcertificateauthorities.heist.youniqx.com
spec:
  group: heist.youniqx.com
  names:
    categories:
    - heist
    - youniqx
    kind: VaultCertificateAuthority
    listKind: VaultCertificateAuthorityList
    plural: vaultcertificateauthorities
    shortNames:
    - vca
    singular: vaultcertificateauthority
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: The status of this Certificate Authority
      jsonPath: .status.conditions[?(@.type=='Provisioned')].status
      name: Provisioned
      type: string
    - description: Creation Timestamp of the Certificate Authority
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: VaultCertificateAuthority is the Schema for the VaultCertificateAuthorities
          API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: VaultCertificateAuthoritySpec defines the desired state of
              VaultCertificateAuthority.
            properties:
              deleteProtection:
                description: DeleteProtection configures that the secret should not
                  be able to be deleted. Defaults to false.
                type: boolean
              import:
                description: Import can be used to import an already existing certificate.
                properties:
                  certificate:
                    description: Certificate contains the certificate matching the
                      private key that should be imported. Can be either encrypted,
                      or plain text.
                    type: string
                  privateKey:
                    description: PrivateKey is the private key that should be imported.
                      The private key must be encrypted with the default Heist transit
                      engine to ensure no secrets are stored in plaintext as a Kubernetes
                      object.
                    type: string
                type: object
              issuer:
                description: Issuer implicitly defines whether the CA is an intermediate
                  or a root CA. If left empty the CA is assumed to be a root CA and
                  will be self-signed. Otherwise, the configured name is a reference
                  to the parent CAs Kubernetes object.
                type: string
              plugin:
                description: Plugin configures the plugin backend used for this engine.
                  Defaults to pki.
                type: string
              settings:
                description: Settings configures the key pair of the Certificate Authority
                properties:
                  excludeCNFromSans:
                    description: ExcludeCNFromSans configures if the common name set
                      in the subject should be excluded from the subject alternative
                      names extension.
                    type: boolean
                  exported:
                    description: Exported configures if the CA should be generated
                      in exported mode. If this is set to true then the private key
                      of the CA can be bound to and accessed by applications. If it
                      is set to false then the private key will be inaccessible. Defaults
                      to false. This setting can not be changed after the PKI is created.
                    type: boolean
                  ipSans:
                    description: IPSans sets the IP subject alternative names extension
                      for the certificate.
                    items:
                      type: string
                    type: array
                  keyBits:
                    default: 2048
                    description: KeyBits sets the size of the key of the certificate
                      authority. The KeyBits value provided must be a valid value
                      for the configured KeyType.
                    enum:
                    - 224
                    - 256
                    - 384
                    - 521
                    - 2048
                    - 3072
                    - 4096
                    type: integer
                  keyType:
                    default: rsa
                    description: KeyType sets the key algorithm of the CA certificate.
                      Can be either rsa or ec.
                    enum:
                    - rsa
                    - ec
                    type: string
                  otherSans:
                    description: OtherSans sets subject alternative names extension
                      that do not fall into the other categories for the certificate.
                    items:
                      type: string
                    type: array
                  permittedDNSDomains:
                    description: PermittedDNSDomains configures an allow list of domains
                      for which certificates can be issued using the certificate authority.
                    items:
                      type: string
                    type: array
                  subjectAlternativeNames:
                    description: SubjectAlternativeNames sets subject alternative
                      names extensions for the certificate.
                    items:
                      type: string
                    type: array
                  ttl:
                    description: TTL sets the validity period of the CA certificate.
                    type: string
                  uriSans:
                    description: URISans sets URI subject alternative names extension
                      for the certificate.
                    items:
                      type: string
                    type: array
                required:
                - keyBits
                - keyType
                type: object
              subject:
                description: Subject configures the subject fields of the Certificate
                  Authority It is recommended to set a least one field im the Subject
                  section
                properties:
                  commonName:
                    description: CommonName sets the CN (common name) field in the
                      certificate subject
                    type: string
                  country:
                    description: Country sets the C (country) field in the certificate's
                      subject.
                    items:
                      type: string
                    type: array
                  locality:
                    description: Locality sets the L (locality) field in the certificate's
                      subject.
                    items:
                      type: string
                    type: array
                  organization:
                    description: Organization sets the organization (O) field in the
                      certificate's subject.
                    items:
                      type: string
                    type: array
                  ou:
                    description: OrganizationalUnit sets the OU (organizational unit)
                      field in the certificate's subject.
                    items:
                      type: string
                    type: array
                  postalCode:
                    description: PostalCode sets the postal code field in the certificate's
                      subject.
                    items:
                      type: string
                    type: array
                  province:
                    description: Province sets the ST (province) field in the certificate's
                      subject.
                    items:
                      type: string
                    type: array
                  streetAddress:
                    description: StreetAddress sets the street address field in the
                      certificate's subject.
                    items:
                      type: string
                    type: array
                type: object
              tuning:
                description: Tuning can be used to tune the PKI Secret Engine in Vault
                properties:
                  defaultLeaseTTL:
                    description: DefaultLeaseTTL sets the default validity of certificates
                      issued by the PKI secret engine.
                    type: string
                  description:
                    description: Description sets the description of the PKI secret
                      engine in Vault.
                    type: string
                  maxLeaseTTL:
                    description: MaxLeaseTTL sets the maximum validity of any certificate
                      issued by the PKI secret engine.
                    type: string
                type: object
            type: object
          status:
            description: VaultCertificateAuthorityStatus defines the observed state
              of VaultCertificateAuthority.
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
